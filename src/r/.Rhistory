library(dplyr)
library(nonlinearTseries)
library(stats)
library(tidyverse)
p_id <- "08"
learning_cond <- "hl"
tau <- 7
kdf_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav.csv")
kdf_mav_idxs_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav-gesture_idxs.csv")
cao_output_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav-cao_dimensions.csv")
kdf_file <- read.csv(kdf_filepath)
kdf_mav <- kdf_file %>% select(starts_with("MAV.Features_"))
kdf_mav_idxs <- read.csv(kdf_mav_idxs_filepath)
trial_starts <- kdf_mav_idxs$gesture_a_starts_idx
trial_ends <- kdf_mav_idxs$gesture_b_stops_idx
head(kdf_mav)
head(kdf_mav_idxs)
num_trials <- length(trial_starts)
num_channels <- ncol(kdf_mav)
cao_dimensions <- matrix(NA, nrow = num_trials, ncol = num_channels)
for (i in 1:num_trials){
cat(sprintf("%d out of %d\n", i, num_trials))
for (j in 1:num_channels){
png(sprintf("p_%s-%s-cao-quants-t%02d-c%02d.png", p_id, learning_cond, i, j))
input_vec <- kdf_mav[trial_starts[i]:trial_ends[i], j]
cao_dimensions[i,j] <- estimateEmbeddingDim(input_vec, time.lag=tau)
dev.off()
}
}
write.csv(cao_dimensions, cao_output_filepath, row.names = FALSE)
library(ggplot2)
library(tidyr)
# Convert matrix to data frame for ggplot
df <- as.data.frame(cao_dimensions)
# Reshape data for ggplot
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value")
#Calculate median of medians
column_medians <- apply(cao_dimensions, 2, median)
median_of_medians <- median(column_medians)
# Create boxplot
ggplot(df_long, aes(x = column, y = value)) +
geom_boxplot() +
labs(title = sprintf("Median of Medians: %.2f", median_of_medians))
library(dplyr)
library(nonlinearTseries)
library(stats)
library(tidyverse)
p_id <- "08"
learning_cond <- "ml"
tau <- 8
kdf_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav.csv")
kdf_mav_idxs_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav-gesture_idxs.csv")
cao_output_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav-cao_dimensions.csv")
kdf_file <- read.csv(kdf_filepath)
kdf_mav <- kdf_file %>% select(starts_with("MAV.Features_"))
kdf_mav_idxs <- read.csv(kdf_mav_idxs_filepath)
trial_starts <- kdf_mav_idxs$gesture_a_starts_idx
trial_ends <- kdf_mav_idxs$gesture_b_stops_idx
head(kdf_mav)
head(kdf_mav_idxs)
num_trials <- length(trial_starts)
num_channels <- ncol(kdf_mav)
cao_dimensions <- matrix(NA, nrow = num_trials, ncol = num_channels)
for (i in 1:num_trials){
cat(sprintf("%d out of %d\n", i, num_trials))
for (j in 1:num_channels){
png(sprintf("p_%s-%s-cao-quants-t%02d-c%02d.png", p_id, learning_cond, i, j))
input_vec <- kdf_mav[trial_starts[i]:trial_ends[i], j]
cao_dimensions[i,j] <- estimateEmbeddingDim(input_vec, time.lag=tau)
dev.off()
}
}
write.csv(cao_dimensions, cao_output_filepath, row.names = FALSE)
library(ggplot2)
library(tidyr)
# Convert matrix to data frame for ggplot
df <- as.data.frame(cao_dimensions)
# Reshape data for ggplot
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value")
#Calculate median of medians
column_medians <- apply(cao_dimensions, 2, median)
median_of_medians <- median(column_medians)
# Create boxplot
ggplot(df_long, aes(x = column, y = value)) +
geom_boxplot() +
labs(title = sprintf("Median of Medians: %.2f", median_of_medians))
library(dplyr)
library(nonlinearTseries)
library(stats)
library(tidyverse)
p_id <- "05"
learning_cond <- "cl"
tau <- 8
kdf_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav.csv")
kdf_mav_idxs_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav-gesture_idxs.csv")
cao_output_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav-cao_dimensions.csv")
kdf_file <- read.csv(kdf_filepath)
kdf_mav <- kdf_file %>% select(starts_with("MAV.Features_"))
kdf_mav_idxs <- read.csv(kdf_mav_idxs_filepath)
trial_starts <- kdf_mav_idxs$gesture_a_starts_idx
trial_ends <- kdf_mav_idxs$gesture_b_stops_idx
head(kdf_mav)
head(kdf_mav_idxs)
num_trials <- length(trial_starts)
num_channels <- ncol(kdf_mav)
cao_dimensions <- matrix(NA, nrow = num_trials, ncol = num_channels)
for (i in 1:num_trials){
cat(sprintf("%d out of %d\n", i, num_trials))
for (j in 1:num_channels){
png(sprintf("p_%s-%s-cao-quants-t%02d-c%02d.png", p_id, learning_cond, i, j))
input_vec <- kdf_mav[trial_starts[i]:trial_ends[i], j]
cao_dimensions[i,j] <- estimateEmbeddingDim(input_vec, time.lag=tau)
dev.off()
}
}
write.csv(cao_dimensions, cao_output_filepath, row.names = FALSE)
library(ggplot2)
library(tidyr)
# Convert matrix to data frame for ggplot
df <- as.data.frame(cao_dimensions)
# Reshape data for ggplot
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value")
#Calculate median of medians
column_medians <- apply(cao_dimensions, 2, median)
median_of_medians <- median(column_medians)
# Create boxplot
ggplot(df_long, aes(x = column, y = value)) +
geom_boxplot() +
labs(title = sprintf("Median of Medians: %.2f (%s-%s)", median_of_medians, p_id, learning_cond))
library(ggplot2)
library(tidyr)
# Convert matrix to data frame for ggplot
df <- as.data.frame(cao_dimensions)
# Reshape data for ggplot
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value")
#Calculate median of medians
column_medians <- apply(cao_dimensions, 2, median)
median_of_medians <- median(column_medians)
# Create boxplot
ggplot(df_long, aes(x = column, y = value)) +
geom_boxplot() +
geom_hline(median_of_medians, '-', 'r', 2) +
labs(title = sprintf("Median of Medians: %.2f (%s-%s)", median_of_medians, p_id, learning_cond))
library(ggplot2)
library(tidyr)
# Convert matrix to data frame for ggplot
df <- as.data.frame(cao_dimensions)
# Reshape data for ggplot
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value")
#Calculate median of medians
column_medians <- apply(cao_dimensions, 2, median)
median_of_medians <- median(column_medians)
# Create boxplot
ggplot(df_long, aes(x = column, y = value)) +
geom_boxplot() +
geom_hline(
yintercept = median_of_medians,
linetype = "dashed",
color = "red",
size = 2
) +
labs(title = sprintf("Median of Medians: %.2f (%s-%s)", median_of_medians, p_id, learning_cond))
library(ggplot2)
library(tidyr)
# Convert matrix to data frame for ggplot
df <- as.data.frame(cao_dimensions)
# Reshape data for ggplot
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value")
#Calculate median of medians
column_medians <- apply(cao_dimensions, 2, median)
median_of_medians <- median(column_medians)
# Create boxplot
ggplot(df_long, aes(x = column, y = value)) +
geom_boxplot() +
geom_hline(
yintercept = median_of_medians,
linetype = "solid",
color = "red",
size = 2
) +
labs(title = sprintf("Median of Medians: %.2f (%s-%s)", median_of_medians, p_id, learning_cond))
library(ggplot2)
library(tidyr)
# Convert matrix to data frame for ggplot
df <- as.data.frame(cao_dimensions)
# Reshape data for ggplot
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value")
#Calculate median of medians
column_medians <- apply(cao_dimensions, 2, median)
median_of_medians <- median(column_medians)
# Create boxplot
ggplot(df_long, aes(x = column, y = value)) +
geom_boxplot() +
geom_hline(
yintercept = median_of_medians,
linetype = "solid",
color = "red",
size = 2
) +
labs(title = sprintf("Median of Medians: %.2f (%s-%s)", median_of_medians, p_id, learning_cond))+
coord_fixed(ratio = 8.5/14) +
theme(
aspect.ratio = 8.5/14,
plot.width = unit(14, "in"),
plot.height = unit(8.5, "in")
)
library(dplyr)
library(nonlinearTseries)
library(stats)
library(tidyverse)
p_id <- "08"
learning_cond <- "cl"
tau <- 8
kdf_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav.csv")
kdf_mav_idxs_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav-gesture_idxs.csv")
cao_output_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav-cao_dimensions.csv")
kdf_file <- read.csv(kdf_filepath)
kdf_mav <- kdf_file %>% select(starts_with("MAV.Features_"))
kdf_mav_idxs <- read.csv(kdf_mav_idxs_filepath)
trial_starts <- kdf_mav_idxs$gesture_a_starts_idx
trial_ends <- kdf_mav_idxs$gesture_b_stops_idx
head(kdf_mav)
head(kdf_mav_idxs)
num_trials <- length(trial_starts)
num_channels <- ncol(kdf_mav)
cao_dimensions <- matrix(NA, nrow = num_trials, ncol = num_channels)
for (i in 1:num_trials){
cat(sprintf("%d out of %d\n", i, num_trials))
for (j in 1:num_channels){
png(sprintf("p_%s-%s-cao-quants-t%02d-c%02d.png", p_id, learning_cond, i, j))
input_vec <- kdf_mav[trial_starts[i]:trial_ends[i], j]
cao_dimensions[i,j] <- estimateEmbeddingDim(input_vec, time.lag=tau)
dev.off()
}
}
write.csv(cao_dimensions, cao_output_filepath, row.names = FALSE)
library(ggplot2)
library(tidyr)
# Convert matrix to data frame for ggplot
df <- as.data.frame(cao_dimensions)
# Reshape data for ggplot
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value")
#Calculate median of medians
column_medians <- apply(cao_dimensions, 2, median)
median_of_medians <- median(column_medians)
# Create boxplot
ggplot(df_long, aes(x = column, y = value)) +
geom_boxplot() +
geom_hline(
yintercept = median_of_medians,
linetype = "solid",
color = "red",
size = 2
) +
labs(title = sprintf("Median of Medians: %.2f (%s-%s)", median_of_medians, p_id, learning_cond))+
coord_fixed(ratio = 8.5/14) +
theme(
aspect.ratio = 8.5/14,
plot.width = unit(14, "in"),
plot.height = unit(8.5, "in")
)
library(dplyr)
library(nonlinearTseries)
library(stats)
library(tidyverse)
p_id <- "10"
learning_cond <- "cl"
tau <- 7
kdf_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav.csv")
kdf_mav_idxs_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav-gesture_idxs.csv")
cao_output_filepath <- paste0("..\\..\\temp-data\\p_", p_id, "-", learning_cond, "\\p_", p_id, "-", learning_cond, "-kdf-mav-cao_dimensions.csv")
kdf_file <- read.csv(kdf_filepath)
kdf_mav <- kdf_file %>% select(starts_with("MAV.Features_"))
kdf_mav_idxs <- read.csv(kdf_mav_idxs_filepath)
trial_starts <- kdf_mav_idxs$gesture_a_starts_idx
trial_ends <- kdf_mav_idxs$gesture_b_stops_idx
head(kdf_mav)
head(kdf_mav_idxs)
num_trials <- length(trial_starts)
num_channels <- ncol(kdf_mav)
cao_dimensions <- matrix(NA, nrow = num_trials, ncol = num_channels)
for (i in 1:num_trials){
cat(sprintf("%d out of %d\n", i, num_trials))
for (j in 1:num_channels){
png(sprintf("p_%s-%s-cao-quants-t%02d-c%02d.png", p_id, learning_cond, i, j))
input_vec <- kdf_mav[trial_starts[i]:trial_ends[i], j]
cao_dimensions[i,j] <- estimateEmbeddingDim(input_vec, time.lag=tau)
dev.off()
}
}
write.csv(cao_dimensions, cao_output_filepath, row.names = FALSE)
library(ggplot2)
library(tidyr)
# Convert matrix to data frame for ggplot
df <- as.data.frame(cao_dimensions)
# Reshape data for ggplot
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value")
#Calculate median of medians
column_medians <- apply(cao_dimensions, 2, median)
median_of_medians <- median(column_medians)
# Create boxplot
ggplot(df_long, aes(x = column, y = value)) +
geom_boxplot() +
geom_hline(
yintercept = median_of_medians,
linetype = "solid",
color = "red",
size = 2
) +
labs(title = sprintf("Median of Medians: %.2f (%s-%s)", median_of_medians, p_id, learning_cond))+
coord_fixed(ratio = 8.5/14) +
theme(
aspect.ratio = 8.5/14,
plot.width = unit(14, "in"),
plot.height = unit(8.5, "in")
)
